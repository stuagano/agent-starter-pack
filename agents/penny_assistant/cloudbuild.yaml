# Cloud Build configuration for Penny Assistant
# Builds and deploys both backend and Streamlit app to Cloud Run

substitutions:
  _REGION: us-central1
  _BACKEND_SERVICE: penny-backend
  _STREAMLIT_SERVICE: penny-streamlit
  _REPO_NAME: penny-assistant

steps:
  # Build and push backend image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'backend'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/${_BACKEND_SERVICE}:$COMMIT_SHA', '.' ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/${_BACKEND_SERVICE}:$COMMIT_SHA' ]

  # Build and push Streamlit image
  - name: 'gcr.io/cloud-builders/docker'
    dir: 'streamlit'
    args: [ 'build', '-t', 'gcr.io/$PROJECT_ID/${_STREAMLIT_SERVICE}:$COMMIT_SHA', '.' ]
  - name: 'gcr.io/cloud-builders/docker'
    args: [ 'push', 'gcr.io/$PROJECT_ID/${_STREAMLIT_SERVICE}:$COMMIT_SHA' ]

  # Deploy backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_BACKEND_SERVICE}'
      - '--image=gcr.io/$PROJECT_ID/${_BACKEND_SERVICE}:$COMMIT_SHA'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--project=$PROJECT_ID'

  # Deploy Streamlit app to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'gcloud'
    args:
      - 'run'
      - 'deploy'
      - '${_STREAMLIT_SERVICE}'
      - '--image=gcr.io/$PROJECT_ID/${_STREAMLIT_SERVICE}:$COMMIT_SHA'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--project=$PROJECT_ID'

images:
  - 'gcr.io/$PROJECT_ID/${_BACKEND_SERVICE}:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/${_STREAMLIT_SERVICE}:$COMMIT_SHA' 